// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (h *Heartbeat) Implant(ctx context.Context) (*Implant, error) {
	result, err := h.Edges.ImplantOrErr()
	if IsNotLoaded(err) {
		result, err = h.QueryImplant().Only(ctx)
	}
	return result, err
}

func (i *Implant) Heartbeats(ctx context.Context) ([]*Heartbeat, error) {
	result, err := i.Edges.HeartbeatsOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryHeartbeats().All(ctx)
	}
	return result, err
}

func (i *Implant) Tasks(ctx context.Context) ([]*Task, error) {
	result, err := i.Edges.TasksOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryTasks().All(ctx)
	}
	return result, err
}

func (t *Task) Implant(ctx context.Context) (*Implant, error) {
	result, err := t.Edges.ImplantOrErr()
	if IsNotLoaded(err) {
		result, err = t.QueryImplant().Only(ctx)
	}
	return result, err
}
