// Code generated by entc, DO NOT EDIT.

package heartbeat

import (
	"time"
)

const (
	// Label holds the string label denoting the heartbeat type in the database.
	Label = "heartbeat"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldPort holds the string denoting the port field in the database.
	FieldPort = "port"
	// FieldPid holds the string denoting the pid field in the database.
	FieldPid = "pid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeImplant holds the string denoting the implant edge name in mutations.
	EdgeImplant = "implant"
	// Table holds the table name of the heartbeat in the database.
	Table = "heartbeats"
	// ImplantTable is the table that holds the implant relation/edge.
	ImplantTable = "heartbeats"
	// ImplantInverseTable is the table name for the Implant entity.
	// It exists in this package in order to avoid circular dependency with the "implant" package.
	ImplantInverseTable = "implants"
	// ImplantColumn is the table column denoting the implant relation/edge.
	ImplantColumn = "heartbeat_implant"
)

// Columns holds all SQL columns for heartbeat fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldIP,
	FieldPort,
	FieldPid,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "heartbeats"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"heartbeat_implant",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
