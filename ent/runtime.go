// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/BradHacker/chungus/ent/heartbeat"
	"github.com/BradHacker/chungus/ent/implant"
	"github.com/BradHacker/chungus/ent/schema"
	"github.com/BradHacker/chungus/ent/task"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	heartbeatFields := schema.Heartbeat{}.Fields()
	_ = heartbeatFields
	// heartbeatDescCreatedAt is the schema descriptor for created_at field.
	heartbeatDescCreatedAt := heartbeatFields[4].Descriptor()
	// heartbeat.DefaultCreatedAt holds the default value on creation for the created_at field.
	heartbeat.DefaultCreatedAt = heartbeatDescCreatedAt.Default.(func() time.Time)
	implantFields := schema.Implant{}.Fields()
	_ = implantFields
	// implantDescLastSeenAt is the schema descriptor for last_seen_at field.
	implantDescLastSeenAt := implantFields[2].Descriptor()
	// implant.DefaultLastSeenAt holds the default value on creation for the last_seen_at field.
	implant.DefaultLastSeenAt = implantDescLastSeenAt.Default.(func() time.Time)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescHasRun is the schema descriptor for has_run field.
	taskDescHasRun := taskFields[5].Descriptor()
	// task.DefaultHasRun holds the default value on creation for the has_run field.
	task.DefaultHasRun = taskDescHasRun.Default.(bool)
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[6].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
}
